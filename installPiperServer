#! /bin/bash
#This screip installs Hi Client Manager on linux ubuntu
# unzip to /opt/$APPNAME/
# copy all configs from config folder to /etc/opt/$APPNAME
# make symblink of scripts to /usr/local/bin
# make symblink of services to /etc/systemd/system/
# enable services
# start services
# delete temp

APPNAME="PiperServer"
server_domin=""
not_empty_read(){
local DESCRIPTION="$1"
local DEFAULT_VALUE="$2"
local result
while [ -z "$result" ]; do
	read -p "$DESCRIPTION" -e -i "$DEFAULT_VALUE" result
done
echo "$result"
}
find_tls_key(){
	local key
	key=""
	if ls /var/lib/caddy &> /dev/null; then
		key="/var/lib/caddy/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/$server_domin/$server_domin"".key"
		if ! ls -a "$key" &> /dev/null ; then
			key=""
		fi
	fi
	echo "$key"
}
find_tls_cert(){
	local cert
	cert=""
	if ls /var/lib/caddy &> /dev/null; then
		cert="/var/lib/caddy/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/$server_domin/$server_domin"".crt"
		if ! ls -a "$cert" &> /dev/null ; then
			cert=""
		fi
	fi
	echo "$cert"
}
installConfig(){
	echo -e "Insert PiperServer and DatabseServer information \n"
	echo -e "\nIf PiperServer is installed on the same server as HiClientManager installed leave this empty"
	read -p "Enter TLS Cert File address : " -e -i "$(find_tls_cert)" tls_cert_file
	echo -e "\nIf PiperServer is installed on the same server as HiClientManager installed leave this empty"
	read -p "Enter TLS Private Key File address : " -e -i "$(find_tls_key)" tls_private_key_file
	echo -e "\nThe port that database server must listen to. default is 5050"
	database_server_port=$(not_empty_read "Enter database server port : " "5050")
	echo -e "\nIf PiperServer is behind another Server app like caddy this should be localhost othervise it can be 0.0.0.0"
	piper_server_address=$(not_empty_read "Enter PiperServer listening address : " "localhost")
	echo -e "\nThe port that PiperServer must listen to. default is 5051"
	piper_server_port=$(not_empty_read "Enter PiperServer listening port : " "5051")
	
	sed -i -e 's#"tlsCertFile": ".*"#"tlsCertFile": "'"$tls_cert_file"'"#' /etc/opt/$APPNAME/server.config
	sed -i -e 's#"tlsPrivateKetFile": ".*"#"tlsPrivateKetFile": "'"$tls_private_key_file"'"#' /etc/opt/$APPNAME/server.config
	sed -i -e 's#"databaseServerPort": .*[,]*$#"databaseServerPort": '"$database_server_port"',#' /etc/opt/$APPNAME/server.config
	sed -i -e 's#"piperServerAddress": ".*"#"piperServerAddress": "'"$piper_server_address"'"#' /etc/opt/$APPNAME/server.config
	sed -i -e 's/"piperServerPort": .*[,]*$/"piperServerPort": '"$piper_server_port"'/' /etc/opt/$APPNAME/server.config
	
	# creat private and publick key
	if ls /bin/java &> /dev/null; then
		/bin/java -jar /opt/$APPNAME/bin/PiperServer.jar -c /etc/opt/$APPNAME/auth
		if ls /opt/HiClientManager &> /dev/null; then
			read -e -p "HiClientManager is installed. Do you want to copy privateKey file to its auth folder ?(yes/no)" -i "yes" yes_or_no
			if [[ "$yes_or_no" == "yes" ]]; then
				cp /etc/opt/$APPNAME/auth/privateKey.pv /etc/opt/HiClientManager/auth
			fi
		fi
	else
		echo "Java virtual machine not installed first install it then run this command : java -jar /opt/$APPNAME/bin/PiperServer.jar -c /etc/opt/$APPNAME/auth"
	fi
}

installCaddy(){
	if ls /etc/caddy &> /dev/null; then
		echo "caddy already installed"
	else
		sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
		curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
		curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list
		sudo apt update
		sudo apt install caddy
	fi
	
	#read -p "Enter your server domain : " server_domin
	echo -e "$server_domin {\n" > /etc/caddy/Caddyfile
	if [[ "$piper_server_address" == "localhost" ]]; then
		echo -e "\thandle /ws/piper* {\n" \
			"\t\treverse_proxy http://$piper_server_address:$piper_server_port\n" \
			"\t}\n" >> /etc/caddy/Caddyfile
	fi
	echo -e "\thandle {\n" \
			"\t\trespond \"hello\"\n" \
			"\t}\n" >> /etc/caddy/Caddyfile
	echo -e "}"

}

update_and_upgrade(){
	answer=$(not_empty_read "Do you want run apt update and apt upgrade? y(es)|n(o): ")
	if [[ "${answer,,}" == "y" ]] || [[ "${answer,,}" == "yes" ]]; then
		apt update && apt upgrade -y			
	fi
}
installJava(){
	if ! ls /bin/java &>/dev/null ; then
		answer=$(not_empty_read "Do you want install java? y(es)|n(o): ")
		if [[ "${answer,,}" == "y" ]] || [[ "${answer,,}" == "yes" ]]; then
			apt install openjdk-17-jre-headless -y			
		fi
	fi
}
server_domin=$(not_empty_read "Enter your server domain : ")

update_and_upgrade
installJava

if ls /tmp/$APPNAME.zip &> /dev/null ; then
	read -p "$APPNAME.zip is already exists. Do you want to download it again ? y(es),n(o)" dowload_zip_again
	if [[ "${dowload_zip_again,,}" == "y" ]] || [[ "${dowload_zip_again,,}" == "yes" ]]; then
		wget -O /tmp/$APPNAME.zip https://s17.goolha.tk/download/PiperServer.zip
		unzip /tmp/$APPNAME.zip -d /opt/$APPNAME 1> /dev/null
	fi
else
	wget -O /tmp/$APPNAME.zip https://s17.goolha.tk/download/PiperServer.zip
	unzip /tmp/$APPNAME.zip -d /opt/$APPNAME 1> /dev/null
fi




mkdir /etc/opt/$APPNAME &> /dev/null
mkdir /etc/opt/$APPNAME/auth &> /dev/null

cp -a /opt/$APPNAME/config/. /etc/opt/$APPNAME

groupadd hitunnel 2> /dev/null
ln -s /opt/$APPNAME/services/piper-server.service /etc/systemd/system/piper-server.service

chmod +x /opt/$APPNAME/scripts/$APPNAME.sh
ln -s /opt/$APPNAME/scripts/$APPNAME.sh /usr/local/bin/$APPNAME

read -e -p "Do you want to install and config Caddy server for PiperServer(Yes/No) ? " -i "yes" installCaddyConfirmation
if [[ "${installCaddyConfirmation,,}" == "yes" ]]; then
	installCaddy
fi

installConfig


rm /tmp/$APPNAME.zip
systemctl enable piper-server.service
systemctl start piper-server.service




